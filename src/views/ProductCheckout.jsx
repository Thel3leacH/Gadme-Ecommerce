import React, { useMemo, useState } from "react";
import { useNavigate } from "react-router-dom";
import {
  Card,
  CardContent,
  CardHeader,
  CardTitle,
  CardFooter,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Separator } from "@/components/ui/separator";
import { Badge } from "@/components/ui/badge";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import {
  Select,
  SelectTrigger,
  SelectValue,
  SelectContent,
  SelectItem,
} from "@/components/ui/select";
import { ScrollArea } from "@/components/ui/scroll-area";
import { ShoppingBag, Truck, CreditCard, Landmark } from "lucide-react";

// üîó ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏°‡∏µ CartContext ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
// import { useCart } from "@/contexts/CartContext";

// ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
const formatTHB = (n) =>
  new Intl.NumberFormat("th-TH", {
    style: "currency",
    currency: "THB",
    minimumFractionDigits: 0,
  }).format(n);

const formatFromSatang = (satang) => formatTHB(Math.round(satang) / 100);

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì subtotal ‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ (‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠ context ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ selector)
function calculateSubtotalSatang(items) {
  return items.reduce((sum, it) => sum + it.unitPriceSatang * it.quantity, 0);
}

/**
 * ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á shape ‡∏Ç‡∏≠‡∏á item ‡πÉ‡∏ô cart (‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤)
 * {
 *   key: "p101_black",
 *   productId: "p101",
 *   variantId: "black",
 *   variantDbId: "var_7f1a3c9e",
 *   sku: "NT-HE-0101-BL",
 *   name: "NovaTech Headphones X",
 *   image: "https://.../101-black.jpg",
 *   options: { color: "Black" },
 *   unitPriceSatang: 199000,
 *   quantity: 1,
 *   addedAt: new Date().toISOString()
 * }
 */

export default function CheckoutPage() {
  const navigate = useNavigate();

  // ‚úÖ ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ useCart ‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏Ñ‡∏∏‡∏ì
  // const { items, currency } = useCart();
  // üîß ‡πÄ‡∏î‡πÇ‡∏°: mock ‡∏à‡∏≤‡∏Å localStorage ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô [] ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
  const stored = JSON.parse(localStorage.getItem("cartData") || "{}");
  const items = stored?.items ?? [];
  const currency = stored?.currency ?? "THB";

  // ----- ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢ -----
  const [fullName, setFullName] = useState("");
  const [phone, setPhone] = useState("");
  const [email, setEmail] = useState("");
  const [province, setProvince] = useState("");
  const [district, setDistrict] = useState("");
  const [address, setAddress] = useState("");
  const [postcode, setPostcode] = useState("");

  // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ç‡∏ô‡∏™‡πà‡∏á/‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô/‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á
  const [shippingMethod, setShippingMethod] = useState("standard"); // standard | express
  const [paymentMethod, setPaymentMethod] = useState("promptpay"); // promptpay | cod | credit
  const [couponCode, setCouponCode] = useState("");
  const [couponApplied, setCouponApplied] = useState(null); // { code, discountSatang }

  // ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á (‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå)
  const shippingFeeSatang = useMemo(() => {
    if (shippingMethod === "express") return 5900; // 59 ‡∏ö‡∏≤‡∏ó
    return 0; // ‡∏™‡πà‡∏á‡∏ü‡∏£‡∏µ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
  }, [shippingMethod]);

  // ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏à‡∏≤‡∏Å‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á (‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå)
  const discountSatang = useMemo(() => {
    return couponApplied?.discountSatang ?? 0;
  }, [couponApplied]);

  // ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå)
  const subtotalSatang = useMemo(() => calculateSubtotalSatang(items), [items]);

  // ‡∏¢‡∏≠‡∏î‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞ (‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå)
  const totalSatang = useMemo(() => {
    const base = Math.max(0, subtotalSatang - discountSatang);
    return base + shippingFeeSatang;
  }, [subtotalSatang, discountSatang, shippingFeeSatang]);

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏á‡πà‡∏≤‡∏¢‡πÜ
  const isFormValid = () =>
    fullName.trim() &&
    phone.trim() &&
    email.trim() &&
    province.trim() &&
    district.trim() &&
    address.trim() &&
    postcode.trim() &&
    items.length > 0;

  // ‡∏Å‡∏î‡πÉ‡∏ä‡πâ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ï‡∏£‡∏£‡∏Å‡∏∞)
  const applyCoupon = () => {
    const code = couponCode.trim().toUpperCase();

    // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: SAVE100 ‡∏•‡∏î 100 ‡∏ö‡∏≤‡∏ó / FREESHIP ‡∏ï‡∏±‡∏î‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á
    if (code === "SAVE100") {
      setCouponApplied({ code, discountSatang: 10000 });
    } else if (code === "FREESHIP") {
      // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (dynamic)
      setCouponApplied({ code, discountSatang: shippingFeeSatang });
    } else {
      setCouponApplied(null);
      alert("‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏");
    }
  };

  // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ (‡πÄ‡∏î‡πÇ‡∏°)
  const placeOrder = async () => {
    if (!isFormValid()) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
      return;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á payload ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö backend
    const payload = {
      orderId: "ord_" + Math.random().toString(36).slice(2, 8),
      currency,
      items, // snapshot ‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
      shipping: {
        method: shippingMethod,
        feeSatang: shippingFeeSatang,
        address: {
          fullName,
          phone,
          email,
          province,
          district,
          address,
          postcode,
        },
      },
      payment: {
        method: paymentMethod,
        status: "pending", // ‡πÉ‡∏´‡πâ backend ‡πÑ‡∏õ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏™‡∏£‡πá‡∏à
      },
      discounts: {
        coupon: couponApplied,
        discountSatang,
      },
      amounts: {
        subtotalSatang,
        totalSatang,
      },
      createdAt: new Date().toISOString(),
    };

    try {
      // üîó ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà ‡πÄ‡∏ä‡πà‡∏ô:
      // const res = await fetch("/api/orders", { method: "POST", body: JSON.stringify(payload) });
      // const data = await res.json();

      console.log("ORDER_PAYLOAD", payload);
      // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÉ‡∏ô localStorage (‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì)
      // localStorage.removeItem("cartData");

      // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Thank You + ‡πÉ‡∏™‡πà orderId
      navigate(`/thank-you?orderId=${payload.orderId}`, { replace: true });
    } catch (e) {
      console.error(e);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
    }
  };

  return (
    <div className="container mx-auto px-4 py-6 md:py-10">
      {/* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ */}
      <div className="mb-6 flex items-center gap-3">
        <ShoppingBag className="h-6 w-6" />
        <h1 className="text-2xl font-semibold tracking-tight">
          ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (Checkout)
        </h1>
        <Badge variant="secondary" className="ml-1">
          {items.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        </Badge>
      </div>

      <div className="grid grid-cols-1 gap-6 lg:grid-cols-12">
        {/* LEFT: ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö + ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á + ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
        <Card className="lg:col-span-8">
          <CardHeader className="pb-3">
            <CardTitle className="text-lg">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</CardTitle>
          </CardHeader>
          <Separator />
          <CardContent className="space-y-6 pt-6">
            {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label htmlFor="fullName">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö</Label>
                <Input
                  id="fullName"
                  placeholder="‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ"
                  value={fullName}
                  onChange={(e) => setFullName(e.target.value)}
                />
              </div>
              <div>
                <Label htmlFor="phone">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</Label>
                <Input
                  id="phone"
                  placeholder="08x-xxx-xxxx"
                  value={phone}
                  onChange={(e) => setPhone(e.target.value)}
                />
              </div>
              <div className="md:col-span-2">
                <Label htmlFor="email">‡∏≠‡∏µ‡πÄ‡∏°‡∏• (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à/‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏û‡∏±‡∏™‡∏î‡∏∏)</Label>
                <Input
                  id="email"
                  type="email"
                  placeholder="you@example.com"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                />
              </div>
            </div>

            {/* ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label>‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î</Label>
                <Select value={province} onValueChange={setProvince}>
                  <SelectTrigger>
                    <SelectValue placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£">‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£</SelectItem>
                    <SelectItem value="‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ">‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ</SelectItem>
                    <SelectItem value="‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà">‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà</SelectItem>
                    <SelectItem value="‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï">‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï</SelectItem>
                    {/* ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á */}
                  </SelectContent>
                </Select>
              </div>
              <div>
                <Label>‡∏≠‡∏≥‡πÄ‡∏†‡∏≠/‡πÄ‡∏Ç‡∏ï</Label>
                <Input
                  placeholder="‡∏≠‡∏≥‡πÄ‡∏†‡∏≠/‡πÄ‡∏Ç‡∏ï"
                  value={district}
                  onChange={(e) => setDistrict(e.target.value)}
                />
              </div>
              <div className="md:col-span-2">
                <Label>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</Label>
                <Textarea
                  placeholder="‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà, ‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô/‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£, ‡∏ñ‡∏ô‡∏ô, ‡∏ã‡∏≠‡∏¢"
                  value={address}
                  onChange={(e) => setAddress(e.target.value)}
                />
              </div>
              <div>
                <Label>‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå</Label>
                <Input
                  placeholder="xxxxx"
                  value={postcode}
                  onChange={(e) => setPostcode(e.target.value)}
                />
              </div>
            </div>

            <Separator />

            {/* ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ç‡∏ô‡∏™‡πà‡∏á */}
            <div className="space-y-3">
              <div className="flex items-center gap-2">
                <Truck className="h-5 w-5" />
                <h3 className="font-medium">‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</h3>
              </div>
              <RadioGroup
                value={shippingMethod}
                onValueChange={setShippingMethod}
                className="grid grid-cols-1 md:grid-cols-2 gap-3"
              >
                <Label className="border rounded-xl p-3 cursor-pointer">
                  <div className="flex items-center gap-3">
                    <RadioGroupItem value="standard" id="ship-standard" />
                    <div>
                      <div className="font-medium">‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô (2‚Äì4 ‡∏ß‡∏±‡∏ô)</div>
                      <div className="text-sm text-muted-foreground">‡∏ü‡∏£‡∏µ</div>
                    </div>
                  </div>
                </Label>
                <Label className="border rounded-xl p-3 cursor-pointer">
                  <div className="flex items-center gap-3">
                    <RadioGroupItem value="express" id="ship-express" />
                    <div>
                      <div className="font-medium">‡∏î‡πà‡∏ß‡∏ô (‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 1‚Äì2 ‡∏ß‡∏±‡∏ô)</div>
                      <div className="text-sm text-muted-foreground">
                        {formatFromSatang(5900)}
                      </div>
                    </div>
                  </div>
                </Label>
              </RadioGroup>
            </div>

            <Separator />

            {/* ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
            <div className="space-y-3">
              <div className="flex items-center gap-2">
                <CreditCard className="h-5 w-5" />
                <h3 className="font-medium">‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h3>
              </div>
              <RadioGroup
                value={paymentMethod}
                onValueChange={setPaymentMethod}
                className="grid grid-cols-1 md:grid-cols-3 gap-3"
              >
                <Label className="border rounded-xl p-3 cursor-pointer">
                  <div className="flex items-center gap-3">
                    <RadioGroupItem value="promptpay" id="pay-promptpay" />
                    <div>
                      <div className="font-medium">PromptPay / QR</div>
                      <div className="text-sm text-muted-foreground">
                        ‡∏™‡πÅ‡∏Å‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                      </div>
                    </div>
                  </div>
                </Label>
                <Label className="border rounded-xl p-3 cursor-pointer">
                  <div className="flex items-center gap-3">
                    <RadioGroupItem value="cod" id="pay-cod" />
                    <div>
                      <div className="font-medium">‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á</div>
                      <div className="text-sm text-muted-foreground">
                        ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏°‡∏ï‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£
                      </div>
                    </div>
                  </div>
                </Label>
                <Label className="border rounded-xl p-3 cursor-pointer">
                  <div className="flex items-center gap-3">
                    <RadioGroupItem value="credit" id="pay-credit" />
                    <div>
                      <div className="font-medium">‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡πÄ‡∏î‡∏ö‡∏¥‡∏ï</div>
                      <div className="text-sm text-muted-foreground">
                        Visa / MasterCard
                      </div>
                    </div>
                  </div>
                </Label>
              </RadioGroup>
            </div>
          </CardContent>

          <CardFooter className="flex justify-end gap-3">
            <Button variant="ghost" onClick={() => navigate("/cart")}>
              ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
            </Button>
            <Button
              className="rounded-full h-11"
              onClick={placeOrder}
              disabled={!isFormValid()}
            >
              ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
            </Button>
          </CardFooter>
        </Card>

        {/* RIGHT: ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */}
        <Card className="lg:col-span-4">
          <CardHeader className="pb-3">
            <CardTitle className="text-lg">‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</CardTitle>
          </CardHeader>
          <Separator />
          <CardContent className="p-0">
            {items.length === 0 ? (
              <div className="p-6 text-sm text-muted-foreground">
                ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á
              </div>
            ) : (
              <>
                <ScrollArea className="max-h-[40vh]">
                  <ul className="divide-y">
                    {items.map((it) => (
                      <li key={it.key} className="p-4 flex gap-3">
                        <img
                          src={it.image}
                          alt={it.name}
                          className="h-16 w-16 rounded-md object-cover border"
                        />
                        <div className="flex-1">
                          <div className="flex items-start justify-between">
                            <div className="font-medium leading-tight">
                              {it.name}
                            </div>
                            <div className="text-sm text-muted-foreground">
                              {formatFromSatang(it.unitPriceSatang)}
                            </div>
                          </div>
                          <div className="text-xs text-muted-foreground">
                            {it.options?.color && (
                              <>‡∏™‡∏µ: {it.options.color} ‚Ä¢ </>
                            )}
                            ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {it.quantity}
                          </div>
                          <div className="text-sm mt-1">
                            ‡∏£‡∏ß‡∏°:{" "}
                            {formatFromSatang(it.unitPriceSatang * it.quantity)}
                          </div>
                        </div>
                      </li>
                    ))}
                  </ul>
                </ScrollArea>

                <div className="p-4 space-y-3">
                  {/* ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á */}
                  <div className="flex gap-2">
                    <Input
                      placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á (‡πÄ‡∏ä‡πà‡∏ô SAVE100 / FREESHIP)"
                      value={couponCode}
                      onChange={(e) => setCouponCode(e.target.value)}
                    />
                    <Button variant="secondary" onClick={applyCoupon}>
                      ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á
                    </Button>
                  </div>

                  <Separator />

                  {/* ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç */}
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</span>
                      <span>{formatFromSatang(subtotalSatang)}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</span>
                      <span>
                        {shippingFeeSatang === 0
                          ? "‡∏ü‡∏£‡∏µ"
                          : formatFromSatang(shippingFeeSatang)}
                      </span>
                    </div>
                    {discountSatang > 0 && (
                      <div className="flex justify-between text-green-600">
                        <span>
                          ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
                          {couponApplied?.code
                            ? ` (${couponApplied.code})`
                            : ""}
                        </span>
                        <span>-{formatFromSatang(discountSatang)}</span>
                      </div>
                    )}
                    <Separator />
                    <div className="flex justify-between font-semibold text-base">
                      <span>‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞</span>
                      <span>{formatFromSatang(totalSatang)}</span>
                    </div>
                  </div>

                  {/* ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏/‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏µ */}
                  <div className="pt-2">
                    <Label htmlFor="notes">‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)</Label>
                    <Textarea
                      id="notes"
                      placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏µ/ ‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏Ø‡∏•‡∏Ø"
                    />
                  </div>
                </div>
              </>
            )}
          </CardContent>
          <CardFooter className="flex flex-col items-stretch gap-2">
            <Button
              className="rounded-full h-11"
              onClick={placeOrder}
              disabled={!isFormValid()}
            >
              ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
            </Button>
            <div className="text-xs text-muted-foreground text-center">
              <Landmark className="inline h-3.5 w-3.5 mr-1" />
              ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô: {currency} ‚Ä¢
              ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
            </div>
          </CardFooter>
        </Card>
      </div>
    </div>
  );
}
